<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://github.com/jonnypeace/jonnypeace.github.io.git/</id><title>HomeLab Hub</title><subtitle>Document site for scripts, code, virtualization and homelab projects</subtitle> <updated>2025-09-29T07:44:31+01:00</updated> <author> <name>jonny peace</name> <uri>https://github.com/jonnypeace/jonnypeace.github.io.git/</uri> </author><link rel="self" type="application/atom+xml" href="https://github.com/jonnypeace/jonnypeace.github.io.git/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="https://github.com/jonnypeace/jonnypeace.github.io.git/"/> <generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator> <rights> © 2025 jonny peace </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>ZFS Mirror, Snapshots, Recovery</title><link href="https://github.com/jonnypeace/jonnypeace.github.io.git/posts/basic-zfs/" rel="alternate" type="text/html" title="ZFS Mirror, Snapshots, Recovery" /><published>2024-02-24T15:00:00+00:00</published> <updated>2024-02-24T16:36:24+00:00</updated> <id>https://github.com/jonnypeace/jonnypeace.github.io.git/posts/basic-zfs/</id> <content src="https://github.com/jonnypeace/jonnypeace.github.io.git/posts/basic-zfs/" /> <author> <name>jonny peace</name> </author> <category term="zfs" /> <category term="mirror" /> <category term="recovery" /> <category term="ubuntu" /> <summary> ZFS Configuration and Management Guide This document outlines essential steps and considerations for configuring and managing ZFS storage pools, including creating a mirrored pool, setting properties, monitoring, and utilizing snapshots for data protection. Creating a ZFS Pool To create a mirrored ZFS pool named new-pool with two disks (/dev/sdb and /dev/sdc), use the following command: sudo... </summary> </entry> <entry><title>Setting up a Custom Neovim config on Arch Linux</title><link href="https://github.com/jonnypeace/jonnypeace.github.io.git/posts/neovim-customization/" rel="alternate" type="text/html" title="Setting up a Custom Neovim config on Arch Linux" /><published>2024-02-14T11:00:00+00:00</published> <updated>2024-02-24T16:09:16+00:00</updated> <id>https://github.com/jonnypeace/jonnypeace.github.io.git/posts/neovim-customization/</id> <content src="https://github.com/jonnypeace/jonnypeace.github.io.git/posts/neovim-customization/" /> <author> <name>jonny peace</name> </author> <category term="Arch Linux" /> <category term="neovim" /> <category term="config" /> <category term="python" /> <category term="language support" /> <summary> vim-plug First we need to install (place the plug.vim into the autoload directory) vim-plug. curl -fLo ~/.local/share/nvim/site/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim Install npm and diagnostic language servers sudo pacman -S npm sudo npm install -g pyright yaml-language-server vscode-json-languageserver bash-language-server type... </summary> </entry> <entry><title>Setting up an HP Printer on Arch Linux</title><link href="https://github.com/jonnypeace/jonnypeace.github.io.git/posts/arch-printer/" rel="alternate" type="text/html" title="Setting up an HP Printer on Arch Linux" /><published>2024-02-10T13:00:00+00:00</published> <updated>2025-09-26T22:16:54+01:00</updated> <id>https://github.com/jonnypeace/jonnypeace.github.io.git/posts/arch-printer/</id> <content src="https://github.com/jonnypeace/jonnypeace.github.io.git/posts/arch-printer/" /> <author> <name>jonny peace</name> </author> <category term="Arch Linux" /> <category term="Printers" /> <category term="CUPS" /> <category term="HP" /> <summary> Installing a printer on Linux can sometimes be a straightforward task, but it becomes interesting when you’re working with specific hardware and distributions. Today, I’m sharing my experience with setting up an HP Printer on Arch Linux, which required a slightly different approach than usual. This guide is tailored for the HP Envy 5000 series, but it may be helpful for other models and series ... </summary> </entry> <entry><title>Nvidia GPU LXD Passthrough</title><link href="https://github.com/jonnypeace/jonnypeace.github.io.git/posts/jellyfin-nvidia-lxd/" rel="alternate" type="text/html" title="Nvidia GPU LXD Passthrough" /><published>2023-10-15T15:00:00+01:00</published> <updated>2023-10-15T15:00:00+01:00</updated> <id>https://github.com/jonnypeace/jonnypeace.github.io.git/posts/jellyfin-nvidia-lxd/</id> <content src="https://github.com/jonnypeace/jonnypeace.github.io.git/posts/jellyfin-nvidia-lxd/" /> <author> <name>jonny peace</name> </author> <category term="homelab" /> <category term="lxd" /> <category term="ubuntu" /> <category term="gpu" /> <category term="nvidia" /> <category term="jellyfin" /> <summary> On the host… Install Nvidia drivers sudo apt install nvidia-driver-535 sudo reboot Check this website, but the deb network install seemed to work best. Nvidia Cuda Install Instructions As of 15/10/2023 These work for ubuntu 22.04 (deb(network) install) wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2204/x86_64/cuda-keyring_1.1-1_all.deb sudo dpkg -i cuda-keyring_1.1-... </summary> </entry> <entry><title>Software Raid Boot Drive Ubuntu</title><link href="https://github.com/jonnypeace/jonnypeace.github.io.git/posts/software-raid-boot/" rel="alternate" type="text/html" title="Software Raid Boot Drive Ubuntu" /><published>2023-10-14T17:00:00+01:00</published> <updated>2023-10-14T17:00:00+01:00</updated> <id>https://github.com/jonnypeace/jonnypeace.github.io.git/posts/software-raid-boot/</id> <content src="https://github.com/jonnypeace/jonnypeace.github.io.git/posts/software-raid-boot/" /> <author> <name>jonny peace</name> </author> <category term="homelab" /> <category term="raid" /> <category term="mdadm" /> <category term="ubuntu" /> <category term="boot" /> <summary> Ubuntu Software Raid on Boot Device OS: Ubuntu 22.04 server At Installation… Select “Custom storage layout” If the disks have existing partitions, click on each disk under AVAILABLE DEVICES and then select REFORMAT. Now select the 1st disk to add as “boot” disk (same menu that had REFORMAT in). Do the same with the 2nd disk. You should now see two 1.000M bios_grub partitions creat... </summary> </entry> </feed>
